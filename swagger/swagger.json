{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API\n",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/plants/": {
            "get": {
                "tags": [
                    "plants"
                ],
                "description": "get all plants\n\u003cbr\u003e",
                "operationId": "PlantController.GetAll",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "true",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Plant"
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "plants"
                ],
                "description": "update the plant\n\u003cbr\u003e",
                "operationId": "PlantController.Update",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for plant content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Plant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Plant"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "plants"
                ],
                "description": "create plants\n\u003cbr\u003e",
                "operationId": "PlantController.CreatePlant",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "true",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for plant content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Plant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{int} models.Plant.Id"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/plants/{pid}": {
            "get": {
                "tags": [
                    "plants"
                ],
                "description": "get plant by pid\n\u003cbr\u003e",
                "operationId": "PlantController.Get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pid",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Plant"
                        }
                    },
                    "403": {
                        "description": "{string} string \"pid is empty\""
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "plants"
                ],
                "description": "delete the plant\n\u003cbr\u003e",
                "operationId": "PlantController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pid",
                        "description": "The pid you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "pid is empty"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/user/": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "get all Users\n\u003cbr\u003e",
                "operationId": "UserController.GetAll",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "true",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "user"
                ],
                "description": "update the user\n\u003cbr\u003e",
                "operationId": "UserController.Update",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for user content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            },
            "post": {
                "tags": [
                    "user"
                ],
                "description": "create users\n\u003cbr\u003e",
                "operationId": "UserController.CreateUser",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for user content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{int} models.User.Id"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "tags": [
                    "user"
                ],
                "description": "Авторизация пользователя\n\u003cbr\u003e",
                "operationId": "UserController.Login",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Данные для входа (логин и пароль)",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"Успешный вход, возвращает токен\"",
                        "schema": {
                            "$ref": "#/definitions/Respons"
                        }
                    },
                    "400": {
                        "description": "{object} Respons \"Ошибка в теле запроса\""
                    },
                    "401": {
                        "description": "{object} Respons \"Неверные логин или пароль\""
                    }
                }
            }
        },
        "/user/logout": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "Logs out current logged in user session\n\u003cbr\u003e",
                "operationId": "UserController.logout",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "true",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} logout success"
                    }
                }
            }
        },
        "/user/{uid}": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "get user by uid\n\u003cbr\u003e",
                "operationId": "UserController.Get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "uid",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": "{string} string \"uid is empty\""
                    }
                }
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "description": "delete the user\n\u003cbr\u003e",
                "operationId": "UserController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "uid",
                        "description": "The uid you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "uid is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        "Respons": {
            "title": "Respons",
            "type": "object"
        },
        "models.LoginRequest": {
            "title": "LoginRequest",
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.Plant": {
            "title": "Plant",
            "type": "object",
            "properties": {
                "Description": {
                    "type": "string"
                },
                "HumidityRange": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "LightRequirement": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "ScientificName": {
                    "type": "string"
                },
                "TemperatureRange": {
                    "type": "string"
                },
                "WaterFrequency": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.User": {
            "title": "User",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Password": {
                    "type": "string"
                },
                "Username": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "name": "user",
            "description": "Operations about Users\n"
        },
        {
            "name": "plants",
            "description": "Operations about plants\n"
        }
    ]
}